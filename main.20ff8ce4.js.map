{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","messageLose","messageWin","scoreBoard","tableCells","querySelectorAll","tableSize","score","scoreBuffer","keyCodeDic","left","up","right","down","gameData","checkTableFull","i","includes","randomGenerator","row","Math","floor","random","col","merge","data","arr","alpha","shift","beta","push","slice","makeMove","direction","gameDataNext","shifted","filter","val","j","length","reverse","gameoverCheck","addScore","reduce","acc","cur","textContent","action","endGame","result","classList","remove","removeEventListener","start","init","add","cleanTable","draw","addEventListener","map","el","_","ind","gameDataUnpacked","forEach","rows","cells","text","className","e","keyCode"],"mappings":"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","file":"main.20ff8ce4.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst scoreBoard = document.querySelector('.game-score');\nconst tableCells = document.querySelectorAll('td');\nconst tableSize = 4;\nlet score = 0;\nlet scoreBuffer = [];\nconst keyCodeDic = {\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n};\nlet gameData = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction checkTableFull() {\n  for (let i = 0; i < tableSize; i++) {\n    if (gameData[i].includes(0)) {\n      return false;\n    }\n  }\n}\n\nfunction randomGenerator() {\n  while (!checkTableFull()) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (gameData[row][col] === 0) {\n      gameData[row][col] = (Math.random() <= 0.1) ? 4 : 2;\n      break;\n    }\n  }\n}\n\nfunction merge(data) {\n  const arr = [];\n  let alpha = data.shift();\n\n  if (!alpha) {\n    return;\n  }\n\n  for (let i = 0; i < tableSize; i++) {\n    const beta = data.shift();\n\n    if (!beta) {\n      if (alpha) {\n        arr.push(alpha);\n      }\n      break;\n    } else if (alpha === beta) {\n      arr.push(alpha + beta);\n      scoreBuffer.push(alpha + beta);\n      alpha = null;\n    } else if (alpha !== beta) {\n      if (alpha) {\n        arr.push(alpha);\n      }\n      alpha = beta;\n    }\n  }\n\n  return arr.slice();\n}\n\nfunction makeMove(direction) {\n  const gameDataNext = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  switch (direction) {\n    case keyCodeDic.left:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = merge(gameData[i].filter((val) => val > 0));\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][j] = shifted[j];\n          }\n        }\n      }\n      break;\n    case keyCodeDic.right:\n      for (let i = 0; i < tableSize; i++) {\n        const shifted = merge(gameData[i].filter((val) => val > 0).reverse());\n\n        if (shifted) {\n          for (let j = 0; j < shifted.length; j++) {\n            gameDataNext[i][tableSize - 1 - j] = shifted[j];\n          }\n        }\n      }\n      break;\n    case keyCodeDic.up:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameData[i][j]);\n        }\n\n        const shifted = merge(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n    case keyCodeDic.down:\n      for (let j = 0; j < tableSize; j++) {\n        const arr = [];\n\n        for (let i = 0; i < tableSize; i++) {\n          arr.push(gameData[tableSize - 1 - i][j]);\n        }\n\n        const shifted = merge(arr.filter((val) => val > 0));\n\n        if (shifted) {\n          for (let i = 0; i < shifted.length; i++) {\n            gameDataNext[tableSize - 1 - i][j] = shifted[i];\n          }\n        }\n      }\n      break;\n    default:\n      break;\n  }\n\n  return gameDataNext;\n}\n\nfunction gameoverCheck() {\n  if (`${gameData}` !== `${makeMove(keyCodeDic.left)}`\n    || `${gameData}` !== `${makeMove(keyCodeDic.right)}`\n    || `${gameData}` !== `${makeMove(keyCodeDic.up)}`\n    || `${gameData}` !== `${makeMove(keyCodeDic.down)}`) {\n    return true;\n  }\n}\n\nfunction addScore() {\n  if (scoreBuffer.length > 0) {\n    score += scoreBuffer.reduce((acc, cur) => acc + cur);\n    scoreBoard.textContent = !score ? 0 : score;\n  }\n}\n\nfunction action(direction) {\n  scoreBuffer = [];\n\n  const gameDataNext = makeMove(direction);\n\n  if (`${gameData}` === `${gameDataNext}`) {\n    return false;\n  }\n\n  gameData = gameDataNext;\n\n  return true;\n}\n\nfunction endGame(result) {\n  if (result) {\n    messageWin.classList.remove('hidden');\n  } else {\n    messageLose.classList.remove('hidden');\n  }\n  document.removeEventListener('keydown', start);\n}\n\nfunction init() {\n  button.classList.remove('start');\n  button.textContent = 'Restart';\n  button.classList.add('restart');\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  scoreBoard.textContent = '0';\n  score = 0;\n  cleanTable();\n  randomGenerator();\n  randomGenerator();\n  draw();\n  document.addEventListener('keydown', start);\n}\n\nfunction cleanTable() {\n  [...tableCells].map(el => {\n    el.classList.remove(`field-cell--${el.textContent}`);\n    el.textContent = '';\n  });\n\n  gameData.map(row => row.map((_, ind) => {\n    row[ind] = 0;\n  }));\n}\n\nfunction draw() {\n  const gameDataUnpacked = [];\n\n  gameData.forEach((rows) => {\n    rows.forEach((cells) => {\n      gameDataUnpacked.push(cells);\n    });\n  });\n\n  tableCells.forEach((cells) => {\n    const text = gameDataUnpacked.shift();\n\n    cells.textContent = !text ? null : text;\n    cells.className = 'field-cell';\n    cells.classList.add(`field-cell--${cells.textContent}`);\n  });\n}\n\nfunction start(e) {\n  if (e.keyCode < 36 || e.keyCode > 41) {\n    return;\n  }\n\n  if (action(e.keyCode)) {\n    if (scoreBuffer.includes(2048)) {\n      endGame(true);\n    }\n    addScore();\n    randomGenerator();\n\n    if (!checkTableFull() && !gameoverCheck()) {\n      endGame(false);\n    }\n    scoreBuffer = [];\n    draw();\n  }\n};\nbutton.addEventListener('click', init);\n"]}